{"version":3,"sources":["data_processor.js","PokemonSelector.js","MoveSelector.js","StatusCalculator.js","App.js","serviceWorker.js","index.js"],"names":["pokemonSelectList","duplicatedForms","idx","pokemons","pokemon","evolution","length","includes","id","form","select","value","key","name","cn","push","PokemonSelector","props","handleChange","bind","state","dataProcessor","find","Number","event","newPokemon","this","setState","onPokemonChange","Grid","container","direction","justify","src","process","style","height","alt","Autocomplete","width","onChange","options","getOptionSelected","option","getOptionLabel","renderOption","Fragment","alignItems","item","xs","renderInput","params","TextField","label","variant","inputProps","autoComplete","PropTypes","number","func","React","Component","MoveSelector","type","types_cn_to_en","types","newMove","onMoveChange","List","dense","moveSet","map","x","Tooltip","title","moves","description","placement","arrow","ListItem","button","onClick","selected","move","class","toLowerCase","marginRight","power","array","StatusCalculator","handleEVBlur","IVs","EVs","natureBuff","natureNerf","updateStats","prevProps","level","base","hp","atk","def","spatk","spdef","spe","values","getBaseValues","stats","i","Math","floor","nature","onStatsChange","e","target","newValue","sum","min","reduce","a","b","max","round","texts","padding","spacing","Button","color","Input","step","handleIVChanges","size","Slider","handleEVChanges","handleEVInputChanges","onBlur","Radio","checked","arrayOf","App","handlePokemonChange","calDamage","dynamaxed","foeId","extreme","typeBonus","maxDamage","maxPercent","toFixed","spa","isNaN","pokemonData","sort","damages","getDamage","pokemonList","slice","Container","margin","border","borderRadius","abilities","filter","index","self","indexOf","ability","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac67326f.chunk.js","sourcesContent":["import pokemons from './data/pokemons';\n// import moves from './data/moves';\n// import types from './data/types';\n\nlet pokemonSelectList = [];\nconst duplicatedForms = [25, 423, 550, 647, 649, 773, 778, 801, 845, 849, 855, 869, 875, 877, 890, 893];\n\nfor (let idx in pokemons) {\n  let pokemon = pokemons[idx];\n\n  if (pokemon.evolution.length > 0) {\n    continue;\n  }\n\n  // Removed as Pokemon home is opened.\n  // if (pokemon.galardex < 0) {\n  //     continue;\n  // }\n\n  if (duplicatedForms.includes(pokemon.id) && pokemon.form > 0) {\n    continue;\n  }\n\n  let select = {\n    value: idx,\n    key: pokemon.id + '_' + pokemon.form,\n    name: pokemon.name.cn + ` #${pokemon.id}`,\n  };\n  pokemonSelectList.push(select);\n}\n\n// let types_cn_to_en = {};\n// for (let type in types) {\n//     types_cn_to_en[types[type].cn] = type;\n// }\n\n// for (let idx in pokemons) {\n//     let pokemon = pokemons[idx];\n\n//     let moveByType = {};\n//     for (let moveId of pokemon.moves) {\n//         const move = moves[moveId];\n//         if (move.class === '变化') {\n//             continue;\n//         }\n//         if (!(move.type in moveByType)) {\n//             moveByType[move.type] = {\n//                 physical: [],\n//                 special: [],\n//             }\n//         }\n//         if (move.class === '物理') {\n//             moveByType[move.type].physical.push(move);\n//         }\n//         if (move.class === '特殊') {\n//             moveByType[move.type].special.push(move);\n//         }\n//     }\n//     for (let type in moveByType) {\n//         moveByType[type].physical = moveByType[type].physical.sort(\n//             (a, b) => Number(b.power) - Number(a.power));\n//         moveByType[type].special = moveByType[type].special.sort(\n//             (a, b) => Number(b.power) - Number(a.power));\n//     }\n// }\n\nexport { pokemonSelectList };\n","import React from 'react';\nimport * as dataProcessor from './data_processor.js';\n\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nclass PokemonSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      pokemon: dataProcessor.pokemonSelectList.find((pokemon) => Number(pokemon.value) === this.props.id),\n    };\n  }\n\n  static get propTypes() {\n    return {\n      id: PropTypes.number,\n      onPokemonChange: PropTypes.func\n    };\n  }\n\n  handleChange(event, newPokemon) {\n    if (newPokemon) {\n      this.setState({ pokemon: newPokemon });\n      this.props.onPokemonChange(newPokemon.value);\n    }\n  }\n\n  render() {\n    return (\n      <Grid container direction=\"row\" justify=\"flex-start\">\n        <img src={process.env.PUBLIC_URL + `/sprites/${this.state.pokemon.key}.png`} style={{ height: \"48px\" }}\n          alt={this.state.pokemon.idx} />\n        <Autocomplete\n          style={{ width: 240 }}\n          value={this.state.pokemon}\n          onChange={this.handleChange}\n          options={dataProcessor.pokemonSelectList}\n          getOptionSelected={(option, value) => option.value === value.value}\n          getOptionLabel={(pokemon) => pokemon.name}\n          renderOption={(pokemon) => (\n            <React.Fragment>\n              <Grid container justify=\"flex-start\" alignItems=\"center\">\n                <Grid item container xs={4} justify=\"center\" alignItems=\"center\">\n                  <img src={process.env.PUBLIC_URL + `/sprites/${pokemon.key}.png`} style={{ height: \"40px\" }}\n                    alt={pokemon.idx} />\n                </Grid>\n                <span>{pokemon.name}</span>\n              </Grid>\n            </React.Fragment>\n          )}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"宝可梦\"\n              variant=\"outlined\"\n              inputProps={{\n                ...params.inputProps,\n                autoComplete: 'new-password', // disable autocomplete and autofill\n              }}\n            />\n          )}\n        />\n      </Grid>\n    );\n  }\n}\n\nexport default PokemonSelector;","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport moves from './data/moves';\nimport types from './data/types';\n\nclass MoveSelector extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.types_cn_to_en = {};\n    for (let type in types) {\n      this.types_cn_to_en[types[type].cn] = type;\n    }\n  }\n\n  static get propTypes() {\n    return {\n      move: PropTypes.number,\n      moveSet: PropTypes.array,\n      onMoveChange: PropTypes.func\n    };\n  }\n\n  handleChange(newMove) {\n    this.props.onMoveChange(newMove);\n  }\n\n  render() {\n    return (\n      <List dense={true}>\n        {this.props.moveSet.map(x => (\n          <Tooltip title={moves[x].description} placement=\"right\" arrow key={moves[x].id}>\n            <ListItem button\n              alignItems=\"center\"\n              onClick={() => this.handleChange(x)}\n              selected={this.props.move === moves[x].id}>\n              <img src={process.env.PUBLIC_URL + `/icons/${moves[x].class}.png`} alt={{ x }}\n                style={{ height: \"20px\" }} />\n              <img src={process.env.PUBLIC_URL + `/icons/types/${this.types_cn_to_en[moves[x].type].toLowerCase()}.svg`} alt={{ x }}\n                style={{ height: \"20px\", marginRight: \"2px\" }} />\n              <span>{moves[x].name.cn}({moves[x].power})</span>\n            </ListItem>\n          </Tooltip>))}\n      </List>\n    );\n  }\n}\n\nexport default MoveSelector;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\n\nimport pokemons from './data/pokemons';\n\nclass StatusCalculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleEVBlur = this.handleEVBlur.bind(this);\n\n    this.state = {\n      IVs: [31, 31, 31, 31, 31, 31],\n      EVs: [0, 0, 0, 0, 0, 0],\n      natureBuff: 0,\n      natureNerf: 0,\n    };\n  }\n\n  static get propTypes() {\n    return {\n      pokemon: PropTypes.number,\n      level: PropTypes.number,\n      stats: PropTypes.arrayOf(PropTypes.number),\n      onStatsChange: PropTypes.func,\n    };\n  }\n\n  componentDidMount() {\n    this.updateStats(this.state.IVs, this.state.EVs, 0, 0);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.pokemon !== prevProps.pokemon ||\n      this.props.level !== prevProps.level) {\n      this.updateStats(this.state.IVs, this.state.EVs,\n        this.state.natureBuff, this.state.natureNerf);\n    }\n  }\n\n  getBaseValues() {\n    const base = pokemons[this.props.pokemon].base;\n    return [base.hp, base.atk, base.def, base.spatk, base.spdef, base.spe];\n  }\n\n  updateStats(IVs, EVs, natureBuff, natureNerf) {\n    const values = this.getBaseValues();\n    let stats = [];\n    for (let i = 0; i < 6; ++i) {\n      const base = Math.floor(this.props.level * (values[i] * 2 + IVs[i] + EVs[i] / 4) / 100);\n      if (i === 0) {\n        stats.push(base + this.props.level + 10);\n      } else {\n        let nature = 1;\n        if (natureBuff !== natureNerf) {\n          if (natureBuff === i) {\n            nature = 1.1;\n          }\n          if (natureNerf === i) {\n            nature = 0.9;\n          }\n        }\n        stats.push(Math.floor((base + 5) * nature));\n      }\n    }\n    this.setState({\n      IVs: IVs,\n      EVs: EVs,\n      natureBuff: natureBuff,\n      natureNerf: natureNerf,\n    });\n    this.props.onStatsChange(stats);\n  }\n\n  handleIVChanges(idx, e) {\n    let IVs = this.state.IVs;\n    IVs[idx] = Number(e.target.value);\n    this.updateStats(IVs, this.state.EVs, this.state.natureBuff, this.state.natureNerf);\n  }\n\n  handleEVChanges(idx, e, newValue) {\n    let EVs = this.state.EVs;\n    let sum = 0;\n    for (let value of EVs) {\n      sum += value;\n    }\n    sum -= EVs[idx];\n    EVs[idx] = Math.min(newValue, 508 - sum);\n    this.updateStats(this.state.IVs, EVs, this.state.natureBuff, this.state.natureNerf);\n  }\n\n  handleEVInputChanges(idx, e) {\n    let EVs = this.state.EVs;\n    let sum = this.state.EVs.reduce((a, b) => a + b, 0);\n    sum -= EVs[idx];\n    EVs[idx] = Math.min(Number(e.target.value), 508 - sum);\n    this.updateStats(this.state.IVs, EVs, this.state.natureBuff, this.state.natureNerf);\n  }\n\n  handleEVBlur() {\n    let EVs = this.state.EVs;\n    for (let i = 0; i < 6; ++i) {\n      EVs[i] = Math.max(0, Math.min(252, EVs[i]));\n      EVs[i] = Math.round(EVs[i] / 4) * 4;\n    }\n    this.updateStats(this.state.IVs, EVs, this.state.natureBuff, this.state.natureNerf);\n  }\n\n  render() {\n    const values = this.getBaseValues();\n    const texts = [\"HP\", \"物攻\", \"物防\", \"特攻\", \"特防\", \"速度\"];\n    return (\n      <Grid container\n        direction=\"column\"\n        style={{ padding: \"10px\" }}>\n        <Grid container item direction=\"row\" spacing={1}>\n          <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\n            <Button variant=\"contained\" color=\"primary\" onClick={() => {\n              this.updateStats([31, 31, 31, 31, 31, 31], [0, 0, 0, 0, 0, 0], 0, 0);\n            }}>重置</Button>\n          </Grid>\n          <Grid item xs={2} container justify=\"center\" alignItems=\"center\">种族值</Grid>\n          <Grid item xs={2} container justify=\"center\" alignItems=\"center\">个体值</Grid>\n          <Grid item xs={3} container justify=\"center\" alignItems=\"center\">\n            努力值({\n              510 - this.state.EVs.reduce((a, b) => a + b, 0)\n            })\n                    </Grid>\n          <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n            性格修正</Grid>\n          <Grid item xs={2} container justify=\"center\" alignItems=\"center\">能力</Grid>\n        </Grid>\n        {[0, 1, 2, 3, 4, 5].map((x) => (\n          <Grid container item direction=\"row\" key={x} spacing={1}>\n            <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\n              {texts[x]}\n            </Grid>\n            <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n              {values[x]}\n            </Grid>\n            <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n              <Input\n                inputProps={{ min: 0, max: 31, step: 1 }}\n                value={this.state.IVs[x]}\n                onChange={this.handleIVChanges.bind(this, x)}\n                type=\"number\"\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n              <Slider\n                value={this.state.EVs[x]}\n                onChange={this.handleEVChanges.bind(this, x)}\n                step={4} min={0} max={252}\n              />\n            </Grid>\n            <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\n              <Input\n                value={this.state.EVs[x]}\n                onChange={this.handleEVInputChanges.bind(this, x)}\n                onBlur={this.handleEVBlur}\n                inputProps={{\n                  step: 4,\n                  min: 0,\n                  max: 252,\n                  type: 'number',\n                }}\n              />\n            </Grid>\n            <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n              <Radio\n                checked={this.state.natureBuff === x}\n                onChange={() => {\n                  this.updateStats(this.state.IVs,\n                    this.state.EVs, x, this.state.natureNerf);\n                }}\n                value={x} />\n              <Radio\n                color='primary'\n                checked={this.state.natureNerf === x}\n                onChange={() => {\n                  this.updateStats(this.state.IVs,\n                    this.state.EVs, this.state.natureBuff, x);\n                }}\n                value={x} />\n            </Grid>\n            <Grid item xs={2} container justify=\"center\" alignItems=\"center\">\n              {this.props.stats[x]}\n            </Grid>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default StatusCalculator;","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport './App.css';\n\nimport PokemonSelector from './PokemonSelector.js'\nimport MoveSelector from './MoveSelector.js'\nimport StatusCalculator from './StatusCalculator.js'\nimport * as dataProcessor from './data_processor.js';\n\nimport pokemons from './data/pokemons';\nimport moves from './data/moves';\nimport types from './data/types';\nimport abilities from './data/abilities';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handlePokemonChange = this.handlePokemonChange.bind(this);\n    this.calDamage = this.calDamage.bind(this);\n\n    this.state = {\n      pokemon: 5,\n      level: 50,\n      stats: [0, 0, 0, 0, 0, 0],\n      move: -1,\n      dynamaxed: false\n    };\n\n    this.types_cn_to_en = {};\n    for (let type in types) {\n      this.types_cn_to_en[types[type].cn] = type;\n    }\n  }\n\n  handlePokemonChange(id) {\n    this.setState({ pokemon: Number(id), move: -1 });\n  }\n\n  calDamage(foeId, extreme) {\n    if (this.state.move === -1) {\n      return \"\";\n    }\n\n    const move = moves[this.state.move];\n    const base = pokemons[foeId].base;\n\n    let hp = base.hp, def = base.def, power = Number(move.power);\n    if (move.class === '特殊') {\n      def = base.spdef;\n      power *= this.state.stats[3];\n    } else {\n      power *= this.state.stats[1];\n    }\n\n    if (!extreme) {\n      hp = Math.floor(this.state.level * (hp * 2 + 31) / 100) + this.state.level + 10;\n      def = Math.floor(this.state.level * (def * 2 + 31) / 100) + 5;\n    } else {\n      hp = Math.floor(this.state.level * (hp * 2 + 31 + 63) / 100) + this.state.level + 10;\n      def = Math.floor((Math.floor(this.state.level * (def * 2 + 31 + 63) / 100) + 5) * 1.1);\n    }\n\n    let typeBonus = 1;\n    for (let type of pokemons[this.state.pokemon].type) {\n      if (types[type].cn === move.type) {\n        typeBonus *= 1.5;\n      }\n    }\n    let type = types[this.types_cn_to_en[move.type]];\n    for (let t of pokemons[foeId].type) {\n      typeBonus *= type[t];\n    }\n    let maxDamage = ((2 * this.state.level + 10) / 250 * power / def + 2) * typeBonus;\n    let minDamage = maxDamage * 0.85;\n    let maxPercent = maxDamage / hp * 100;\n    let minPercent = minDamage / hp * 100;\n\n    return `[${minPercent.toFixed(2)}%, ${maxPercent.toFixed(2)}%]`;\n  }\n\n  getDamage(foeId) {\n    if (this.state.move === -1) {\n      return 0;\n    }\n\n    const move = moves[this.state.move];\n    const base = pokemons[foeId].base;\n\n    let hp = base.hp, def = base.def, power = Number(move.power);\n    if (move.class === '特殊') {\n      def = base.spdef;\n      power *= this.state.stats[3];\n    } else {\n      power *= this.state.stats[1];\n    }\n\n    hp = Math.floor(this.state.level * (hp * 2 + 31) / 100) + this.state.level + 10;\n    def = Math.floor(this.state.level * (def * 2 + 31) / 100) + 5;\n\n    let typeBonus = 1;\n    for (let type of pokemons[this.state.pokemon].type) {\n      if (types[type].cn === move.type) {\n        typeBonus *= 1.5;\n      }\n    }\n    let type = types[this.types_cn_to_en[move.type]];\n    for (let t of pokemons[foeId].type) {\n      typeBonus *= type[t];\n    }\n    return ((2 * this.state.level + 10) / 250 * power / def + 2) * typeBonus / hp;\n  }\n\n  render() {\n    const pokemon = this.state.pokemon;\n    const atk = this.state.stats[1];\n    const spa = this.state.stats[3];\n    const power = function (x) {\n      let typeBonus = 1;\n      for (let type of pokemons[pokemon].type) {\n        if (types[type].cn === moves[x].type) {\n          typeBonus = 1.5;\n        }\n      }\n      if (moves[x].class === '变化' || isNaN(moves[x].power)) {\n        return -Number(moves[x].id);\n      } else if (moves[x].class === '物理') {\n        return atk * Number(moves[x].power) * typeBonus;\n      } else {\n        return spa * Number(moves[x].power) * typeBonus;\n      }\n    };\n    const pokemonData = pokemons[this.state.pokemon];\n    const moveSet = pokemonData.moves\n      .sort((a, b) => power(b) - power(a));\n\n\n    const damages = {};\n    for (let pokemon of dataProcessor.pokemonSelectList) {\n      damages[pokemon.value] = this.getDamage(pokemon.value, false);\n    }\n    const pokemonList = dataProcessor.pokemonSelectList.slice();\n    pokemonList.sort((a, b) =>\n      damages[b.value] - damages[a.value]\n    );\n\n    return (\n      <Container>\n        <div style={{ margin: \"8px\" }}>\n          <Grid container direction=\"row\" style={{ margin: \"8px\", border: \"1px #eee solid\", borderRadius: \"16px\", width: \"100%\" }}>\n            <Grid item xs={4} style={{ padding: \"8px\" }}>\n              <PokemonSelector\n                id={this.state.pokemon}\n                onPokemonChange={this.handlePokemonChange} />\n              <div style={{ padding: \"8px\" }}>\n                {pokemonData.type.map((type) => (\n                  <img src={process.env.PUBLIC_URL + `/icons/types/${type.toLowerCase()}.svg`}\n                    alt={{ type }} key={type} style={{ height: \"32px\", marginRight: \"8px\" }} />\n                ))}\n              </div>\n              <div style={{ padding: \"8px\" }}>\n                {pokemonData.abilities\n                  .filter((value, index, self) => self.indexOf(value) === index)\n                  .map((ability) => (\n                    <Tooltip key={ability} title={abilities[ability].description}>\n                      <div>\n                        {abilities[ability].name.cn}\n                      </div>\n                    </Tooltip>\n                  ))}\n              </div>\n            </Grid>\n            <Grid item xs={8}>\n              <StatusCalculator\n                pokemon={this.state.pokemon}\n                level={50}\n                stats={this.state.stats}\n                onStatsChange={(stats) => this.setState({ stats: stats })} />\n            </Grid>\n          </Grid>\n        </div>\n        <Grid container direction=\"row\">\n          <Grid item xs={3}>\n            <MoveSelector\n              move={this.state.move}\n              moveSet={moveSet}\n              onMoveChange={(x) => {\n                if (power(x) > 0) {\n                  this.setState({ move: moves[x].id });\n                }\n              }} />\n          </Grid>\n          <Grid item xs={9}>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"right\">宝可梦</TableCell>\n                    <TableCell align=\"right\">无耐久伤害</TableCell>\n                    <TableCell align=\"right\">极限耐久伤害</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {pokemonList.map((pokemon) => (\n                    <TableRow key={pokemon.value}>\n                      <TableCell align=\"right\">\n                        <img src={process.env.PUBLIC_URL + `/sprites/${pokemon.key}.png`}\n                          alt={pokemon.idx}\n                          style={{ height: \"24px\" }} />\n                        {pokemon.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{this.calDamage(pokemon.value, false)}</TableCell>\n                      <TableCell align=\"right\">{this.calDamage(pokemon.value, true)}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}